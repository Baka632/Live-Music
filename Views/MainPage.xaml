<Page
    x:Class="Live_Music.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Live_Music"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    >
    <Page.Resources>
        <ResourceDictionary>
            <Style TargetType="Button" x:Key="ButtonFontIconStyle" BasedOn="{StaticResource ButtonRevealStyle}">
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="CornerRadius" Value="25"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Width" Value="35"/>
            </Style>
            <SolidColorBrush x:Key="ToggleButtonUncheckedCheckedIndeterminateBackground" Color="{x:Bind musicInfomation.GridAcrylicBrushColorProperties,Mode=OneWay}"/>
            <Style x:Key="ToggleButtonRevealStyle" TargetType="ToggleButton">
                <Setter Property="Background" Value="{ThemeResource ToggleButtonRevealBackground}"/>
                <Setter Property="Foreground" Value="{ThemeResource ToggleButtonForeground}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrush}"/>
                <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonRevealBorderThemeThickness}"/>
                <Setter Property="Padding" Value="{ThemeResource ButtonPadding}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
                <Setter Property="FocusVisualMargin" Value="-3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver"/>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPointerOver}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPointerOver}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPointerOver}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed"/>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPressed}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPressed}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPressed}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushDisabled}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundDisabled}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Checked">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushChecked}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundChecked}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver"/>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedPointerOver}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed"/>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedPressed}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedDisabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedDisabled}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Indeterminate">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminate}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminate}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminatePointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver"/>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePointerOver}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePointerOver}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminatePressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed"/>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePressed}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePressed}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminateDisabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminateDisabled}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminateDisabled}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" CornerRadius="{TemplateBinding CornerRadius}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="mediaControlToggleButtonStyle" BasedOn="{StaticResource ToggleButtonRevealStyle}" TargetType="ToggleButton">
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Width" Value="35"/>
                <Setter Property="Margin" Value="5,0,5,0"/>
                <Setter Property="CornerRadius" Value="25"/>
            </Style>
        </ResourceDictionary>
    </Page.Resources>
    
    <Grid x:Name="mainPageGrid">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="100"/>
        </Grid.RowDefinitions>

        <NavigationView PaneDisplayMode="Top" Background="{ThemeResource SystemControlAcrylicElementMediumHighBrush}" x:Name="mainPageNavigtationView" IsBackEnabled="{x:Bind ContentFrameCanGoBack,Mode=OneWay}" BackRequested="mainPageNavigtationView_BackRequested" ItemInvoked="mainPageNavigtationView_ItemInvoked" DisplayModeChanged="mainPageNavigtationView_DisplayModeChanged" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <NavigationView.Resources>
                <Style TargetType="muxc:NavigationViewItem" x:Name="mainPageNavigtationViewItemsStyle">
                    <Setter Property="Height" Value="20"/>
                </Style>
            </NavigationView.Resources>

            <NavigationView.MenuItems>
                <NavigationViewItem Content="我的音乐" x:Name="myMusic" Tag="myMusic" IsSelected="True">
                    <NavigationViewItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE189;"/>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
                <NavigationViewItem Content="播放历史" x:Name="musicPlayedHistory" Tag="musicPlayedHistory">
                    <NavigationViewItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE81C;" />
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
                <NavigationViewItem Content="正在播放" x:Name="nowPlaying" Tag="nowPlaying">
                    <NavigationViewItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE142;" />
                        <!--先凑合着用-->
                    </NavigationViewItem.Icon>
                </NavigationViewItem>

            </NavigationView.MenuItems>

            <NavigationView.AutoSuggestBox>
                <AutoSuggestBox x:Name="searchAutoSuggestBox" QueryIcon="Find" AutomationProperties.Name="Search" CornerRadius="0" Height="35" Width="180" PlaceholderText="搜索" BorderBrush="Gray"/>
            </NavigationView.AutoSuggestBox>

            <Frame x:Name="mainContectFrame"/>

        </NavigationView>

        <Grid x:Name="wideNowPlayingGrid" HorizontalAlignment="Stretch" RequestedTheme="Dark" Height="100" VerticalAlignment="Bottom" Grid.Row="1">
            <Grid.Background>
                <AcrylicBrush
                        BackgroundSource="Backdrop"
                        TintColor="{x:Bind musicInfomation.GridAcrylicBrushColorProperties,Mode=OneWay}"
                        TintOpacity="0.5"
                        AlwaysUseFallback="False"
                    />
            </Grid.Background>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MaxWidth="282"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="61.6"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource ButtonFontIconStyle}" x:Key="musicControlButtonStyle">
                    <Setter Property="Height" Value="51"/>
                    <Setter Property="Width" Value="51"/>
                </Style>
                <Style TargetType="ToggleButton" x:Key="musicControlToggleButtonStyle" BasedOn="{StaticResource ToggleButtonRevealStyle}">
                    <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Height" Value="37"/>
                    <Setter Property="Width" Value="37"/>
                    <Setter Property="Margin" Value="5,0,5,0"/>
                    <Setter Property="CornerRadius" Value="25"/>
                </Style>
            </Grid.Resources>

            <Button CanDrag="True" Visibility="{x:Bind appInfomation.IsMusicPlayingControlVisible,Mode=OneWay}" Padding="0" Click="EnterNowPlaying" Width="auto" MaxWidth="250" VerticalAlignment="Stretch" Grid.ColumnSpan="2" Background="Transparent" CornerRadius="0" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Image Grid.Column="0" Margin="0,0,10,0" Source="{x:Bind musicInfomation.MusicImageProperties,Mode=OneWay}"/>
                    <Grid Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBlock Text="{x:Bind musicInfomation.MusicTitleProperties,Mode=OneWay}" FontSize="18" Grid.Row="0"/>
                        <TextBlock Margin="0,0,0,5" Grid.Row="1" Text="{x:Bind musicInfomation.MusicAlbumArtistProperties,Mode=OneWay}" FontWeight="Bold" FontSize="16"/>
                    </Grid>
                </Grid>
            </Button>

            <Grid Visibility="{x:Bind appInfomation.IsMediaControlVisible,Mode=OneWay}" Grid.RowSpan="2" Margin="0,8,0,0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="52"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal">
                    <ToggleButton ToolTipService.ToolTip="{x:Bind ShufflingMusicProperties,Mode=OneWay}" Click="ShuffleMusic" Content="&#xE14B;" Style="{StaticResource mediaControlToggleButtonStyle}"/>

                    <Button IsEnabled="{x:Bind appInfomation.IsPlayerButtonEnabled,Mode=OneWay}" Click="PreviousMusic" Content="&#xE100;" Style="{StaticResource musicControlButtonStyle}" FontSize="20" Width="35" Height="35"/>

                    <Button IsEnabled="{x:Bind appInfomation.IsPlayerButtonEnabled,Mode=OneWay}" ToolTipService.ToolTip="{x:Bind NowPlayingProperties,Mode=OneWay}" FontSize="27" Click="PlayPauseMusic" Margin="6,0,6,0" Style="{StaticResource musicControlButtonStyle}" BorderBrush="#9f9f9f" BorderThickness="2">
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="None" Key="Space"/>
                            <KeyboardAccelerator Modifiers="Control" Key="P"/>
                        </Button.KeyboardAccelerators>
                        <FontIcon FontSize="27" Glyph="{x:Bind appInfomation.NowPlayingButtonIconGlyph,Mode=OneWay}"/>
                    </Button>

                    <Button IsEnabled="{x:Bind appInfomation.IsPlayerButtonEnabled,Mode=OneWay}" Click="NextMusic" Content="&#xE101;" Style="{StaticResource musicControlButtonStyle}" FontSize="20" Width="35" Height="35"/>

                    <ToggleButton ToolTipService.ToolTip="{x:Bind RepeatingMusicProperties,Mode=OneWay}"  IsThreeState="True" Click="RepeatMusic" Style="{StaticResource musicControlToggleButtonStyle}">
                        <FontIcon FontSize="16" Glyph="{x:Bind appInfomation.RepeatMusicButtonIconGlyph,Mode=OneWay}"/>
                    </ToggleButton>
                </StackPanel>
            </Grid>
            
            <Grid x:Name="musicProcessGrid" Grid.Column="1" MaxWidth="420" Visibility="{x:Bind appInfomation.IsMediaControlVisible,Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Row="1" Margin="15,0,15,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{x:Bind appInfomation.MusicNowPlayingTimeTextBlockText,Mode=OneWay}" Grid.Column="0" FontSize="12" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <Slider Margin="5,0,5,0" HorizontalAlignment="Stretch" Grid.Column="1" x:Name="processSlider" Value="{x:Bind musicService.mediaPlayer.PlaybackSession.Position.TotalSeconds,Mode=OneWay}" IsThumbToolTipEnabled="False" ValueChanged="processSlider_ValueChanged"/>
                <TextBlock Text="{x:Bind musicInfomation.MusicLenthProperties,Mode=OneWay}" Grid.Column="2" FontSize="12" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
            
            <StackPanel Grid.Column="2" Margin="0,6,0,0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,5,0" Orientation="Horizontal">
                    <Button Height="35" Width="35" CornerRadius="25" HorizontalAlignment="Center" Click="MuteMusic" Margin="0,0,5,0" Background="Transparent" Style="{StaticResource ButtonFontIconStyle}">
                        <FontIcon FontSize="16" Glyph="{x:Bind volumeGlyphState.VolumeGlyph,Mode=OneWay}"/>
                    </Button>
                    <Slider Width="100" ValueChanged="VolumeChanged" Value="{x:Bind musicInfomation.VolumeInSliderProperties,Mode=OneWay}" HorizontalAlignment="Center"/>
                </StackPanel>

                <Button x:Name="enterCompactOverlayModeButton" ToolTipService.ToolTip="进入最小模式" Click="EnterCompactOverlayMode" Margin="5,0,5,0" Height="35" Width="35" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" Content="&#xE158;" CornerRadius="25" Background="Transparent" Style="{StaticResource ButtonFontIconStyle}"/>

                <Button Click="OpenMusicFile" Content="&#xE1A5;" Style="{StaticResource ButtonFontIconStyle}" Margin="0,0,5,0"/>

                <Button Margin="0,0,6,0" Padding="0" Height="35" Width="35" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" CornerRadius="25" Background="Transparent" Style="{StaticResource ButtonFontIconStyle}">
                    <Button.Content>
                        <FontIcon x:Name="moreOptionsFlyoutFontIcon" Glyph="&#xE10C;"/>
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel>
                                <Button IsEnabled="{x:Bind appInfomation.IsPlayerButtonEnabled,Mode=OneWay}" Click="StopMusic" CornerRadius="0" Background="Transparent">
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE106;" Margin="0,0,5,0" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <TextBlock Text="清空&quot;正在播放&quot;列表" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
        </Grid>

        <Grid x:Name="narrowNowPlayingGrid" HorizontalAlignment="Stretch" RequestedTheme="Dark" Height="100" VerticalAlignment="Bottom" Grid.Row="1">
            <Grid.Background>
                <AcrylicBrush
                        BackgroundSource="Backdrop"
                        TintColor="{x:Bind musicInfomation.GridAcrylicBrushColorProperties,Mode=OneWay}"
                        TintOpacity="0.5"
                        AlwaysUseFallback="False"
                    />
            </Grid.Background>

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>

            <Grid.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource ButtonFontIconStyle}" x:Key="musicControlButtonStyle">
                    <Setter Property="Height" Value="51"/>
                    <Setter Property="Width" Value="51"/>
                </Style>
                <Style TargetType="ToggleButton" x:Key="musicControlToggleButtonStyle" BasedOn="{StaticResource ToggleButtonRevealStyle}">
                    <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Height" Value="37"/>
                    <Setter Property="Width" Value="37"/>
                    <Setter Property="Margin" Value="5,0,5,0"/>
                    <Setter Property="CornerRadius" Value="25"/>
                </Style>
            </Grid.Resources>

            <Button CanDrag="True" Visibility="{x:Bind appInfomation.IsMusicPlayingControlVisible,Mode=OneWay}" Padding="0" Click="EnterNowPlaying" Width="auto" MaxWidth="230" VerticalAlignment="Stretch" Background="Transparent" CornerRadius="0">
                <Grid Margin="15,0,15,0">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="{x:Bind musicInfomation.MusicTitleProperties,Mode=OneWay}" FontSize="18" Grid.Row="0"/>
                    <TextBlock Grid.Row="1" Text="{x:Bind musicInfomation.MusicAlbumArtistProperties,Mode=OneWay}" FontWeight="Bold" FontSize="16"/>
                </Grid>
            </Button>

            <StackPanel Visibility="{x:Bind appInfomation.IsMediaControlVisible,Mode=OneWay}" Margin="0,8,0,0" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal">
                <ToggleButton ToolTipService.ToolTip="{x:Bind ShufflingMusicProperties,Mode=OneWay}" Click="ShuffleMusic" Content="&#xE14B;" Style="{StaticResource mediaControlToggleButtonStyle}"/>

                <Button IsEnabled="{x:Bind appInfomation.IsPlayerButtonEnabled,Mode=OneWay}" Click="PreviousMusic" Content="&#xE100;" Style="{StaticResource musicControlButtonStyle}" FontSize="20" Width="35" Height="35"/>

                <Button IsEnabled="{x:Bind appInfomation.IsPlayerButtonEnabled,Mode=OneWay}" ToolTipService.ToolTip="{x:Bind NowPlayingProperties,Mode=OneWay}" FontSize="27" Click="PlayPauseMusic" Margin="6,0,6,0" Style="{StaticResource musicControlButtonStyle}" BorderBrush="#9f9f9f" BorderThickness="2">
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="None" Key="Space"/>
                        <KeyboardAccelerator Modifiers="Control" Key="P"/>
                    </Button.KeyboardAccelerators>
                    <FontIcon FontSize="27" Glyph="{x:Bind appInfomation.NowPlayingButtonIconGlyph,Mode=OneWay}"/>
                </Button>

                <Button IsEnabled="{x:Bind appInfomation.IsPlayerButtonEnabled,Mode=OneWay}" Click="NextMusic" Content="&#xE101;" Style="{StaticResource musicControlButtonStyle}" FontSize="20" Width="35" Height="35"/>

                <ToggleButton ToolTipService.ToolTip="{x:Bind RepeatingMusicProperties,Mode=OneWay}"  IsThreeState="True" Click="RepeatMusic" Style="{StaticResource musicControlToggleButtonStyle}">
                    <FontIcon FontSize="16" Glyph="{x:Bind appInfomation.RepeatMusicButtonIconGlyph,Mode=OneWay}"/>
                </ToggleButton>

                <Button Margin="0,0,6,0" Padding="0" Height="35" Width="35" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center"  CornerRadius="25" Background="Transparent" Style="{StaticResource ButtonFontIconStyle}">
                    <Button.Content>
                        <FontIcon Glyph="&#xE10C;" FontSize="16"/>
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                    <Button Height="35" Width="35" CornerRadius="25" HorizontalAlignment="Center" Click="MuteMusic" Margin="0,0,5,0" Background="Transparent" Style="{StaticResource ButtonFontIconStyle}">
                                        <FontIcon FontSize="16" Glyph="{x:Bind volumeGlyphState.VolumeGlyph,Mode=OneWay}"/>
                                    </Button>
                                    <Slider Width="100" ValueChanged="VolumeChanged" Value="{x:Bind musicInfomation.VolumeInSliderProperties,Mode=OneWay}" HorizontalAlignment="Center"/>
                                </StackPanel>

                                <Button Margin="0,5,0,5" HorizontalAlignment="Stretch" Grid.Row="1" ToolTipService.ToolTip="进入最小模式" Click="EnterCompactOverlayMode" Background="Transparent">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE158;" Margin="0,0,5,0" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <TextBlock Text="进入最小模式" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>

                                <Button HorizontalAlignment="Stretch" Grid.Row="2" Click="OpenMusicFile" Background="Transparent">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE1A5;" Margin="0,0,5,0" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <TextBlock Text="打开音乐文件" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>

                                <Button HorizontalAlignment="Stretch" Grid.Row="3" IsEnabled="{x:Bind appInfomation.IsPlayerButtonEnabled,Mode=OneWay}" Click="StopMusic" Background="Transparent">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE106;" Margin="0,0,5,0" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <TextBlock Text="清空&quot;正在播放&quot;列表" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>

            <Grid Visibility="{x:Bind appInfomation.IsMediaControlVisible,Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Row="1" Margin="15,0,15,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{x:Bind appInfomation.MusicNowPlayingTimeTextBlockText,Mode=OneWay}" Grid.Column="0" FontSize="12" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <Slider Margin="5,0,5,0" HorizontalAlignment="Stretch" Grid.Column="1" x:Name="processSliderNarrow" Value="{x:Bind musicService.mediaPlayer.PlaybackSession.Position.TotalSeconds,Mode=OneWay}" IsThumbToolTipEnabled="False" ValueChanged="processSlider_ValueChanged"/>
                <TextBlock Text="{x:Bind musicInfomation.MusicLenthProperties,Mode=OneWay}" Grid.Column="2" FontSize="12" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
        </Grid>

        <Grid x:Name="superButtonGrid" HorizontalAlignment="Right" VerticalAlignment="Stretch" MaxWidth="210" Grid.Row="0" Width="50" Visibility="Collapsed" PointerExited="HideSuperButton" Background="{ThemeResource SystemControlAcrylicElementBrush}">
            <Grid.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.ThemeDictionaries>
                        <ResourceDictionary x:Key="Light">
                            <Style TargetType="TextBlock" x:Key="TextBlockForground">
                                <Setter Value="Black" Property="Foreground"/>
                                <Setter Property="FontSize" Value="10"/>
                            </Style>
                            <Style TargetType="FontIcon" x:Key="FontIconForground">
                                <Setter Value="Black" Property="Foreground"/>
                                <Setter Property="FontSize" Value="22"/>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary x:Key="Dark">
                            <Style TargetType="TextBlock" x:Key="TextBlockForground">
                                <Setter Value="White" Property="Foreground"/>
                                <Setter Property="FontSize" Value="10"/>
                            </Style>
                            <Style TargetType="FontIcon" x:Key="FontIconForground">
                                <Setter Value="White" Property="Foreground"/>
                                <Setter Property="FontSize" Value="22"/>
                            </Style>
                        </ResourceDictionary>
                    </ResourceDictionary.ThemeDictionaries>
                </ResourceDictionary>
            </Grid.Resources>

            <Grid.ChildrenTransitions>
                <TransitionCollection>
                    <PaneThemeTransition/>
                </TransitionCollection>
            </Grid.ChildrenTransitions>

            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <Button x:Name="searchButton" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" CornerRadius="0">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE094;"  Style="{ThemeResource FontIconForground}"/>
                        <TextBlock Text="搜索" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{ThemeResource TextBlockForground}" FontWeight="ExtraLight"/>
                    </StackPanel>
                </Button>

                <Button x:Name="shareButton" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" CornerRadius="0">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <FontIcon FontFamily="HoloLens MDL2 Assets" Glyph="&#xE72D;" Style="{ThemeResource FontIconForground}"/>
                        <TextBlock Text="共享" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{ThemeResource TextBlockForground}" FontWeight="ExtraLight"/>
                    </StackPanel>
                </Button>

                <Button x:Name="mainPageButton" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" CornerRadius="0">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE10F;" Style="{ThemeResource FontIconForground}"/>
                        <TextBlock Text="开始" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{ThemeResource TextBlockForground}" FontWeight="ExtraLight"/>
                    </StackPanel>
                </Button>

                <Button x:Name="settingsButton" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" CornerRadius="0">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE115;" Style="{ThemeResource FontIconForground}"/>
                        <TextBlock Text="设置" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{ThemeResource TextBlockForground}" FontWeight="ExtraLight"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>

        <muxc:InfoBar
            Margin="0,0,0,10"
            HorizontalAlignment="Center" 
            VerticalAlignment="Bottom"
            Severity="{x:Bind appInfomation.InfoBarSeverity,Mode=OneWay}"
            IsOpen="{x:Bind appInfomation.IsInfoBarOpen,Mode=OneWay}"
            Title="{x:Bind appInfomation.InfoBarTitle,Mode=OneWay}"
            Message="{x:Bind appInfomation.InfoBarMessage,Mode=OneWay}" >
            <muxc:InfoBar.ActionButton>
                <Button Visibility="{x:Bind appInfomation.IsInfoBarButtonShow,Mode=OneWay}" Content="显示详细信息" Click="{x:Bind appInfomation.InfoBarButtonClick,Mode=OneWay}" />
            </muxc:InfoBar.ActionButton>
        </muxc:InfoBar>

        <TextBlock x:Name="titleTextBlock" Text="Live Music" Style="{StaticResource CaptionTextBlockStyle}" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="0" Grid.Row="0" Margin="11,11,0,0"/>
        
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Tablet">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="760"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="wideNowPlayingGrid.Visibility" Value="Visible"/>
                        <Setter Target="narrowNowPlayingGrid.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                
                <VisualState x:Name="Phone">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="wideNowPlayingGrid.Visibility" Value="Collapsed"/>
                        <Setter Target="narrowNowPlayingGrid.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
